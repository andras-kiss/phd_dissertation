%!PS-Adobe-2.0
%%Title: raw_lines.eps
%%Creator: gnuplot 4.6 patchlevel 6
%%CreationDate: Sun Nov 16 18:15:45 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (raw_lines.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 6)
  /Author (andras)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Nov 16 18:15:45 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
1829 4871 M
63 0 V
4080 0 R
-63 0 V
stroke
1745 4871 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 2.5)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1829 4181 M
63 0 V
4080 0 R
-63 0 V
stroke
1745 4181 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 3)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1829 3490 M
63 0 V
4080 0 R
-63 0 V
stroke
1745 3490 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 3.5)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1829 2800 M
63 0 V
4080 0 R
-63 0 V
stroke
1745 2800 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 4)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1829 2109 M
63 0 V
4080 0 R
-63 0 V
stroke
1745 2109 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 4.5)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1829 1419 M
63 0 V
4080 0 R
-63 0 V
stroke
1745 1419 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 5)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1829 728 M
63 0 V
4080 0 R
-63 0 V
stroke
1745 728 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 5.5)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1829 728 M
0 63 V
0 4080 R
0 -63 V
stroke
1829 588 M
[ [(Helvetica) 250.0 0.0 true true 0 (-1000)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2865 728 M
0 63 V
0 4080 R
0 -63 V
stroke
2865 588 M
[ [(Helvetica) 250.0 0.0 true true 0 (-500)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3901 728 M
0 63 V
0 4080 R
0 -63 V
stroke
3901 588 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4936 728 M
0 63 V
0 4080 R
0 -63 V
stroke
4936 588 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 500)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5972 728 M
0 63 V
0 4080 R
0 -63 V
stroke
5972 588 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 1000)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1829 4871 N
0 -4143 V
4143 0 V
0 4143 V
-4143 0 V
Z stroke
LCb setrgbcolor
1087 2799 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 250.0 0.0 true true 0 (pMg)]
[(Helvetica) 200.0 125.0 true true 0 (2+)]
] -108.3 MCshow
grestore
LTb
LCb setrgbcolor
3900 98 M
[ [(Helvetica) 250.0 0.0 true true 0 (X / )]
[(Symbol) 250.0 0.0 true true 0 (m)]
[(Helvetica) 250.0 0.0 true true 0 (m)]
] -83.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UL
LT0
LC0 setrgbcolor
1829 1376 M
207 -16 V
207 -4 V
207 -2 V
208 2 V
207 24 V
207 57 V
207 189 V
207 300 V
207 368 V
208 417 V
207 438 V
207 219 V
207 121 V
207 6 V
207 -84 V
207 -172 V
208 -207 V
207 -220 V
207 -225 V
207 -238 V
0 -131 V
-207 32 V
-207 109 V
-207 109 V
-208 163 V
-207 187 V
-207 178 V
-207 155 V
-207 160 V
-207 100 V
-207 10 V
-208 -69 V
3486 3155 L
3279 2743 L
3072 2356 L
2865 2010 L
2658 1759 L
2450 1568 L
-207 -99 V
-207 -69 V
-207 -34 V
0 -12 V
207 -2 V
207 3 V
207 -56 V
208 70 V
207 -21 V
207 51 V
207 168 V
207 279 V
207 351 V
208 437 V
207 405 V
207 268 V
207 188 V
207 -23 V
207 -92 V
207 -183 V
208 -201 V
207 -212 V
207 -165 V
207 -181 V
0 -102 V
-207 60 V
-207 106 V
-207 4 V
-208 110 V
-207 152 V
-207 203 V
-207 167 V
-207 174 V
-207 116 V
-207 -7 V
-208 -86 V
3486 3135 L
3279 2722 L
3072 2338 L
2865 2027 L
2658 1775 L
2450 1610 L
-207 -95 V
-207 -54 V
-207 -44 V
0 -15 V
207 -5 V
207 -9 V
207 9 V
208 -6 V
207 19 V
207 48 V
207 129 V
207 277 V
207 352 V
208 435 V
207 405 V
207 266 V
207 153 V
207 30 V
207 -89 V
207 -177 V
208 -199 V
207 -182 V
207 -186 V
207 -167 V
0 -76 V
-207 24 V
-207 2 V
-207 -12 V
-208 89 V
-207 202 V
-207 190 V
-207 205 V
-207 174 V
-207 111 V
-207 4 V
-208 -91 V
3486 3097 L
3279 2772 L
3072 2396 L
2865 2028 L
2658 1785 L
2450 1636 L
2243 1505 L
-207 -33 V
-207 -12 V
0 -22 V
207 1 V
207 10 V
207 5 V
208 1 V
207 -5 V
207 49 V
207 150 V
207 258 V
207 365 V
208 432 V
207 388 V
207 275 V
207 145 V
207 32 V
207 -65 V
207 -132 V
208 -216 V
207 -161 V
207 -154 V
207 -133 V
0 -58 V
-207 -7 V
-207 -40 V
-207 -69 V
-208 64 V
-207 208 V
-207 188 V
-207 196 V
-207 164 V
-207 50 V
-207 59 V
-208 -98 V
3486 3117 L
3279 2799 L
3072 2445 L
2865 2063 L
2658 1852 L
2450 1695 L
-207 -94 V
-207 -58 V
-207 -47 V
0 -18 V
207 2 V
207 10 V
207 1 V
208 2 V
207 48 V
207 15 V
207 150 V
207 255 V
207 332 V
208 403 V
207 380 V
207 250 V
207 118 V
207 11 V
207 -106 V
207 -219 V
208 -218 V
207 -246 V
207 -196 V
207 -174 V
% End plot #1
% Begin plot #2
stroke
LT1
LC1 setrgbcolor
1829 2121 M
207 5 V
207 4 V
207 -11 V
208 12 V
207 19 V
207 54 V
207 161 V
207 222 V
207 343 V
208 400 V
207 275 V
207 122 V
207 4 V
207 -109 V
207 -203 V
207 -242 V
208 -256 V
207 -191 V
207 -161 V
207 -121 V
0 -53 V
-207 -13 V
-207 -31 V
-207 68 V
-208 149 V
-207 245 V
-207 250 V
-207 268 V
-207 223 V
-207 101 V
-207 -14 V
3693 3521 L
3486 3291 L
3279 3031 L
3072 2792 L
2865 2595 L
2658 2451 L
2450 2334 L
-207 -84 V
-207 -41 V
-207 -49 V
0 1 V
207 5 V
207 3 V
207 0 V
208 5 V
207 22 V
207 83 V
207 169 V
207 215 V
207 321 V
208 373 V
207 269 V
207 116 V
207 5 V
207 -116 V
207 -182 V
207 -247 V
208 -245 V
207 -189 V
207 -145 V
207 -139 V
0 -20 V
-207 -27 V
-207 -17 V
-207 80 V
-208 190 V
-207 219 V
-207 242 V
-207 239 V
-207 256 V
-207 63 V
-207 -30 V
3693 3525 L
3486 3295 L
3279 3012 L
3072 2756 L
2865 2559 L
2658 2393 L
-208 -77 V
-207 -78 V
-207 -26 V
-207 -16 V
0 -5 V
207 -4 V
207 -2 V
207 0 V
208 4 V
207 6 V
207 47 V
207 133 V
207 204 V
207 300 V
208 434 V
207 278 V
207 161 V
207 31 V
207 -108 V
207 -162 V
207 -259 V
208 -237 V
207 -186 V
207 -147 V
207 -122 V
0 -41 V
-207 -20 V
-207 -11 V
-207 83 V
-208 164 V
-207 208 V
-207 230 V
-207 257 V
-207 201 V
-207 97 V
-207 -41 V
3693 3565 L
3486 3308 L
3279 3035 L
3072 2690 L
-207 -81 V
2658 2455 L
-208 -83 V
-207 -62 V
-207 -37 V
-207 -26 V
0 -11 V
207 -6 V
207 -6 V
207 5 V
208 -2 V
207 31 V
207 73 V
207 144 V
207 212 V
207 324 V
208 395 V
207 256 V
207 150 V
207 -17 V
207 -109 V
207 -175 V
207 -255 V
208 -219 V
207 -202 V
207 -140 V
207 -123 V
0 -28 V
-207 -13 V
-207 -8 V
-207 43 V
-208 162 V
-207 198 V
-207 235 V
-207 269 V
-207 207 V
-207 98 V
-207 -18 V
3693 3590 L
3486 3368 L
3279 3103 L
3072 2865 L
2865 2670 L
2658 2537 L
2450 2428 L
-207 -78 V
-207 -48 V
-207 -32 V
0 -17 V
207 -4 V
207 7 V
207 10 V
208 -2 V
207 20 V
207 74 V
207 157 V
207 192 V
207 313 V
208 387 V
207 253 V
207 121 V
207 13 V
207 -111 V
207 -172 V
207 -237 V
208 -233 V
207 -185 V
207 -146 V
207 -100 V
% End plot #2
% Begin plot #3
stroke
LT2
LC2 setrgbcolor
1829 1839 M
207 7 V
207 4 V
207 26 V
208 83 V
207 179 V
207 295 V
207 400 V
207 402 V
207 389 V
208 297 V
207 126 V
207 21 V
207 -134 V
207 -224 V
207 -242 V
207 -260 V
208 -196 V
207 -153 V
207 -134 V
207 -109 V
0 -77 V
-207 -28 V
-207 58 V
-207 65 V
-208 178 V
-207 281 V
-207 375 V
-207 410 V
-207 195 V
-207 42 V
3901 4011 L
3693 3784 L
3486 3400 L
3279 3114 L
3072 2838 L
2865 2625 L
2658 2462 L
2450 2292 L
2243 2171 L
-207 -94 V
-207 -94 V
0 -39 V
207 -26 V
207 7 V
207 46 V
208 78 V
207 211 V
207 388 V
207 420 V
207 364 V
207 320 V
208 230 V
207 104 V
207 -22 V
207 -162 V
207 -246 V
207 -305 V
207 -319 V
208 -225 V
207 -184 V
207 -133 V
207 -113 V
0 -32 V
-207 17 V
-207 58 V
-207 125 V
-208 206 V
-207 289 V
-207 375 V
-207 417 V
-207 198 V
-207 82 V
-207 -46 V
3693 3904 L
3486 3632 L
3279 3363 L
3072 3079 L
2865 2819 L
2658 2577 L
2450 2393 L
2243 2262 L
-207 -98 V
-207 -86 V
0 -35 V
207 21 V
207 42 V
207 64 V
208 129 V
207 214 V
207 301 V
207 465 V
207 179 V
207 234 V
208 320 V
207 121 V
207 -3 V
207 -157 V
207 -229 V
207 -283 V
207 -283 V
208 -226 V
207 -173 V
207 -180 V
207 -127 V
0 -70 V
-207 -17 V
-207 29 V
-207 133 V
-208 223 V
-207 327 V
-207 356 V
-207 391 V
-207 224 V
-207 72 V
-207 -50 V
3693 3934 L
3486 3672 L
3279 3408 L
3072 3150 L
2865 2849 L
2658 2649 L
2450 2486 L
2243 2371 L
-207 -91 V
-207 -56 V
0 -31 V
207 -33 V
207 29 V
207 48 V
208 91 V
207 191 V
207 226 V
207 320 V
207 323 V
207 327 V
208 256 V
207 104 V
207 -39 V
207 -133 V
207 -263 V
207 -277 V
207 -302 V
208 -211 V
207 -134 V
207 -116 V
207 -92 V
0 -23 V
-207 19 V
-207 25 V
-207 121 V
-208 177 V
-207 266 V
-207 341 V
-207 385 V
-207 251 V
-207 82 V
-207 -56 V
3693 3926 L
3486 3694 L
3279 3429 L
3072 3173 L
2865 2960 L
2658 2752 L
2450 2593 L
2243 2461 L
-207 -80 V
-207 -97 V
0 -52 V
207 -27 V
207 -1 V
207 40 V
208 113 V
207 165 V
207 262 V
207 287 V
207 330 V
207 309 V
208 196 V
207 168 V
207 -8 V
207 -157 V
207 -238 V
207 -305 V
207 -317 V
208 -246 V
207 -198 V
207 -135 V
207 -92 V
% End plot #3
stroke
LTb
LCb setrgbcolor
1829 4871 N
0 -4143 V
4143 0 V
0 4143 V
-4143 0 V
Z stroke
1.000 UP
0.00 0.00 0.00 C 2036 4526 M
[ [(Helvetica) 400.0 0.0 true true 0 (A)]
] -133.3 MLshow
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
